# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  workflow_dispatch:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
        with:
          sdk: 3.3.0

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - uses: subosito/flutter-action@v2.12.0
        with:
          channel: 'stable'
      - name: Build apk
        run: |
          flutter pub get
          flutter format --set-exit-if-changed .
          flutter analyze
          flutter test
          flutter build apk
      - name: Retrieve Release Version
        id: versionstep
        run: |
          VERSION=$(more pubspec.yaml | grep version: | cut -d ' ' -f2)
          echo "::set-output name=VERSION::$VERSION"
      - name: Upload the APK onto Github
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'build/app/outputs/flutter-apk/*.apk'
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.versionstep.outputs.VERSION }}
